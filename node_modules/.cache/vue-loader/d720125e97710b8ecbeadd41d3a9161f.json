{"remainingRequest":"/home/runner/work/73311548_CF02_CULTIVO_DE_PLATANO/73311548_CF02_CULTIVO_DE_PLATANO/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/73311548_CF02_CULTIVO_DE_PLATANO/73311548_CF02_CULTIVO_DE_PLATANO/src/views/Tema1.vue?vue&type=template&id=1008fca0&lang=pug","dependencies":[{"path":"/home/runner/work/73311548_CF02_CULTIVO_DE_PLATANO/73311548_CF02_CULTIVO_DE_PLATANO/src/views/Tema1.vue","mtime":1743782010622},{"path":"/home/runner/work/73311548_CF02_CULTIVO_DE_PLATANO/73311548_CF02_CULTIVO_DE_PLATANO/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/73311548_CF02_CULTIVO_DE_PLATANO/73311548_CF02_CULTIVO_DE_PLATANO/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/73311548_CF02_CULTIVO_DE_PLATANO/73311548_CF02_CULTIVO_DE_PLATANO/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/73311548_CF02_CULTIVO_DE_PLATANO/73311548_CF02_CULTIVO_DE_PLATANO/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/73311548_CF02_CULTIVO_DE_PLATANO/73311548_CF02_CULTIVO_DE_PLATANO/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/73311548_CF02_CULTIVO_DE_PLATANO/73311548_CF02_CULTIVO_DE_PLATANO/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/73311548_CF02_CULTIVO_DE_PLATANO/73311548_CF02_CULTIVO_DE_PLATANO/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}